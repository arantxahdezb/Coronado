<?php

use Drupal\file\Entity\File;
use Symfony\Component\HttpFoundation\RedirectResponse;

function coronado_banner_cancel()
{
  global $base_url;

  $response = new RedirectResponse($base_url.'/admin/content/banners_home');
  $response->send();
  return;
}

function coronado_preprocess_html(&$variables) {
  unset ($variables['head_title']);
}

function coronado_preprocess_page(&$variables) {
  $variables['bucket'] = "https://".\Drupal::config('s3fs.settings')->get('bucket').".s3.amazonaws.com/s3fs-public";
}

function coronado_theme()
{
  return [
    'coronado_home_page'       => [
      'template'  => 'home-page',
      'variables' => [
        'banners' => [],
        'profile' => [],
        'bucket_url'=> "https://".\Drupal::config('s3fs.settings')->get('bucket').".s3.amazonaws.com/s3fs-public",
      ],
    ],
    'coronado_404_not_found'   => [
      'template'  => '404-not-found',
      'variables' => [
        'bucket_url'=> "https://".\Drupal::config('s3fs.settings')->get('bucket').".s3.amazonaws.com/s3fs-public",
      ],
    ],
    'coronado_403_forbidden'   => [
      'template'  => '403-forbidden',
      'variables' => [
        'bucket_url'=> "https://".\Drupal::config('s3fs.settings')->get('bucket').".s3.amazonaws.com/s3fs-public",
      ],
    ],
    'coronado_about_us'       => [
      'template'  => 'about-us',
      'variables' => [
        'about_us' => [],
        'bucket_url'=> "https://".\Drupal::config('s3fs.settings')->get('bucket').".s3.amazonaws.com/s3fs-public",
      ],
    ],
    'coronado_how_we_work'       => [
      'template'  => 'how-we-work',
      'variables' => [
        'how_we_work' => [],
        'bucket_url'=> "https://".\Drupal::config('s3fs.settings')->get('bucket').".s3.amazonaws.com/s3fs-public",
      ],
    ],
    'coronado_notice_of_privacy'       => [
      'template'  => 'notice-of-privacy',
      'variables' => [
        'notice_of_privacy' => [],
        'bucket_url'=> "https://".\Drupal::config('s3fs.settings')->get('bucket').".s3.amazonaws.com/s3fs-public",
      ],
    ],
  ];
}

function coronado_preprocess_image_widget(&$variables)
{
  $element = $variables['element'];

  $variables['attributes'] = array('class' => array('image-widget', 'js-form-managed-file', 'form-managed-file', 'clearfix'));

  if (!empty($element['fids']['#value'])) {
    $files = array();
    foreach ($element['fids']['#value'] as $fid) {
      $image = File::load($fid);
      array_push($files, $image);
      $element['file_' . $image->id()]['filename']['#suffix'] = ' <span class="file-size">(' . format_size($image->getSize()) . ')</span> ';
    }

    $file_variables = array();
    foreach ($files as $file) {
      array_push($file_variables, array(
        'style_name' => $element['#preview_image_style'],
        'uri' => $file->getFileUri(),
      ));
    }


    $preview = array();
    foreach ($file_variables as $vfile) {
      array_push($preview, array(
        '#weight' => -10,
        '#theme' => 'image_style',
        '#width' => $vfile['width'],
        '#height' => $vfile['height'],
        '#style_name' => $vfile['style_name'],
        '#uri' => $vfile['uri'],
      ));
    }

    $element['preview'] = $preview;

    // Store the dimensions in the form so the file doesn't have to be
    // accessed again. This is important for remote files.
    $element['width'] = array(
      '#type' => 'hidden',
      '#value' => $file_variables['width'],
    );
    $element['height'] = array(
      '#type' => 'hidden',
      '#value' => $file_variables['height'],
    );
  }

  $variables['data'] = array();
  foreach (\Drupal\Core\Render\Element::children($element) as $child) {
    $variables['data'][$child] = $element[$child];
  }
}

function coronado_page_attachments_alter(array &$attachments) {
  foreach ($attachments['#attached']['html_head'] as $key => $attachment) {
    if ($attachment[1] == 'system_meta_generator') {
      unset($attachments['#attached']['html_head'][$key]);
    }
  }
}
